#include <iostream>
#include <cstdio>
#include <vector>
#include <ctime>
#include <iomanip>
#include "Separador.h"
#include "Leitura.h"
#include "Escrita.h"
using namespace std;
#define V -1
#define F 999
#define E 888

#define QTD_ESTADOS 168
#define B 0
#define QTD_SIMBOLOS 56

int main() {
    cout << fixed;
    cout << setprecision(3);
    char alfabeto[QTD_SIMBOLOS] = {'\0', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', ':', ';', '!', '=', '>', '<', '_', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '+', '-', '*', '/', '%', '^', '(', ')', '[', ']'};
    
    /// TABELA DE TRANSICAO
    int tabelaTransicao[QTD_ESTADOS][QTD_SIMBOLOS] = {{F, 4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 9, 9, 9, 10, 11, 12, 12, 28, 44, 51, 61, 77, 82, 90, 19, 19, 96, 19, 19, 103, 112, 38, 49, 115, 19, 124, 137, 151, 156, 160, 163, 47, 19, 19, 15, 15, 16, 16, 17, 18, 14, 14, 14, 14},
        {V, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F},
        {V, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F},
        {V, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 5, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F},
        {V, F, F, F, F, F, F, F, F, F, F, 5, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F},
        {F, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F},
        {V, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F},
        {V, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F},
        {V, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F},
        {V, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F},
        {V, F, F, F, F, F, F, F, F, F, F, F, F, F, F, 13, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F},
        {V, F, F, F, F, F, F, F, F, F, F, F, F, F, F, 13, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F},
        {V, F, F, F, F, F, F, F, F, F, F, F, F, F, F, 13, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F},
        {V, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F},
        {V, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F},
        {V, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F},
        {V, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F},
        {V, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F},
        {V, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 29, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 30, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 31, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 32, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 33, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 34, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 35, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 36, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, F, F, F},
        {F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, F, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, F, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, F, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, F, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, F, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, F, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, F, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, F, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, F, F, F},
        {V, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 29, 39, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 42, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 30, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 40, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 31, 22, 22, 22, 41, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 32, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 30, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 43, 21, 43, 21, 21, 21, 21, 21, 21, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 31, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 29, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 45, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 30, 21, 21, 21, 46, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 31, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 29, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 48, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 30, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 43, 21, 21, 21, 21, 21, 21, 21, 21, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 29, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 50, 20, 20, 20, 20, 20, 20, 20, 20, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 30, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 29, 20, 20, 20, 20, 52, 20, 20, 20, 20, 20, 20, 20, 20, 20, 56, 20, 20, 58, 20, 20, 20, 20, 20, 20, 20, 20, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 30, 21, 21, 21, 21, 21, 21, 53, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 31, 22, 22, 22, 22, 22, 22, 22, 22, 54, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 32, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 55, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 33, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 30, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 57, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 31, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 67, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 30, 21, 21, 21, 21, 59, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 31, 60, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 32, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 155, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 29, 62, 20, 20, 20, 20, 20, 20, 65, 20, 20, 20, 20, 20, 20, 68, 20, 20, 76, 20, 20, 20, 20, 20, 20, 20, 20, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 30, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 63, 21, 21, 21, 21, 21, 21, 21, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 31, 22, 22, 22, 22, 64, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 32, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 30, 66, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 31, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 67, 22, 22, 22, 22, 22, 22, 22, 22, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 32, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 30, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 69, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 31, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 70, 71, 22, 22, 22, 22, 22, 22, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 32, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 155, 23, 23, 23, 23, 23, 23, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 32, 23, 23, 23, 23, 23, 23, 23, 23, 72, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 33, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 73, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 34, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 74, 25, 25, 25, 25, 25, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 35, 26, 26, 26, 26, 75, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 36, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 30, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 29, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 78, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 30, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 79, 21, 21, 21, 21, 21, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 31, 22, 80, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 32, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 81, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 33, 24, 24, 24, 24, 144, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 29, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 83, 20, 88, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 30, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 84, 21, 21, 21, 21, 21, 21, 21, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 31, 22, 22, 22, 22, 85, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 32, 23, 23, 23, 23, 23, 23, 23, 23, 86, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 33, 24, 24, 24, 24, 24, 87, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 34, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 30, 21, 21, 21, 89, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 31, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 159, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 29, 91, 20, 20, 20, 20, 20, 20, 20, 94, 20, 20, 20, 20, 20, 122, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 30, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 92, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 31, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 93, 22, 22, 22, 22, 22, 22, 22, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 32, 23, 23, 23, 23, 155, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 30, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 95, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 31, 22, 22, 22, 22, 159, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 29, 20, 20, 20, 20, 20, 97, 20, 20, 20, 20, 20, 20, 20, 98, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 30, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 30, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 99, 21, 21, 21, 102, 21, 21, 21, 21, 21, 21, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 31, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 100, 22, 22, 22, 22, 22, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 32, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 101, 23, 23, 23, 23, 23, 23, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 33, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 31, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 29, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 104, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 30, 21, 21, 21, 21, 21, 21, 105, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 31, 106, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 32, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 107, 23, 23, 23, 23, 23, 23, 23, 23, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 33, 24, 24, 24, 24, 24, 24, 24, 24, 108, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 34, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 109, 25, 25, 25, 25, 25, 25, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 35, 26, 26, 26, 26, 26, 26, 26, 110, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, 26, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 36, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 111, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, 27, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 29, 113, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 30, 21, 21, 21, 21, 21, 21, 21, 21, 114, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 31, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 159, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 29, 116, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 118, 20, 20, 20, 20, 20, 20, 20, 20, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 30, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 117, 21, 21, 117, 21, 21, 21, 21, 21, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 31, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 92, 22, 22, 22, 22, 22, 22, 22, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 31, 22, 22, 22, 22, 22, 22, 22, 22, 119, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 32, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 120, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 33, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 121, 24, 24, 24, 24, 24, 24, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 34, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 30, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 123, 21, 21, 21, 21, 21, 21, 21, 21, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 31, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 29, 125, 20, 20, 20, 129, 20, 20, 20, 20, 20, 20, 20, 20, 20, 135, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 30, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 126, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 31, 22, 22, 22, 127, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 32, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 128, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 33, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 134, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 30, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 130, 131, 21, 21, 21, 21, 21, 21, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 31, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 159, 22, 22, 22, 22, 22, 22, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 31, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 132, 22, 22, 22, 22, 22, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 32, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 133, 23, 23, 23, 23, 23, 23, 23, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 33, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 134, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 34, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 30, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 136, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 31, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 159, 22, 22, 22, 22, 22, 22, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 29, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 138, 20, 20, 145, 20, 20, 20, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 30, 21, 21, 21, 21, 139, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 141, 21, 21, 21, 21, 21, 21, 21, 21, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 31, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 140, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 32, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 31, 22, 22, 22, 22, 22, 22, 22, 22, 142, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 32, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 143, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 33, 24, 24, 24, 24, 24, 24, 144, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 34, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 30, 146, 21, 21, 21, 21, 21, 21, 21, 147, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 31, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 159, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 31, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 148, 22, 22, 22, 22, 22, 22, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 32, 23, 23, 149, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 33, 24, 24, 24, 24, 24, 24, 24, 150, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 34, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 29, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 152, 20, 20, 153, 20, 20, 20, 20, 20, 20, 20, 20, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 30, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 30, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 153, 21, 21, 21, 21, 21, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 31, 22, 22, 22, 22, 159, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 33, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 29, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 157, 20, 20, 20, 20, 20, 20, 20, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 30, 21, 21, 21, 21, 158, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 31, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 159, 22, 22, 22, 22, 22, 22, 22, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 32, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 29, 161, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 30, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 162, 21, 21, 21, 21, 21, 21, 21, 21, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 31, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 29, 20, 20, 20, 20, 20, 20, 20, 164, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 30, 21, 21, 21, 21, 21, 21, 21, 21, 165, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 31, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 166, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 32, 23, 23, 23, 23, 167, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, F, F, F, F, F, F, F, F, F, F},
        {V, 37, 37, 37, 37, 37, 37, 37, 37, 37, 37, F, F, F, F, F, F, F, 33, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, F, F, F, F, F, F, F, F, F, F}
    }; 

    string entrada = leitura(); // Envia para a função de ler o arquivo de texto
    vector<string> entradas = split(entrada); // Envia para função split que separa todas as strings no espaço, retornando um vetor com todas as strings presentes no arquivo
    entradas.pop_back(); // Remove simbolo invisivel do split;
    clock_t tStart = clock(); // adicionado apenas para ter uma ideia de quanto tempo o programa demora para realizar sua função
    bool addSimboloFinal = true; // esta variável serve para adicionar o 0 no final para saber quando termina a string
    int last = 0; // Utilizado para saber qual é a posição final para depois ser acrecido de 1 e adicionar o 0 no final do array simbolosEmInt

/// ---------------VERIFICA SE OS SIMBOLOS EXISTEM NO E OS TRANSFORMA CADA UM EM INT CORRESPONDENTE A SUA POSIÇÃO NO ARRAY DE ALFABETO------------------------------------

    for (int ent = 0; ent < entradas.size(); ++ent){
            int tam = 0;
            vector<int> saidas;
            bool simboloExiste[entrada.size()];
            saidas.push_back(0);
            int simbolosEmInt[entrada.size()+1];
            string entrada = entradas[ent];
            for (int i = 0; i < entrada.size(); ++i){
                simboloExiste[i] = false;
                // cout << entrada[i] << endl;
                for (int j = 0; j < QTD_SIMBOLOS; ++j){
                    if(entrada[i] == '\0' || entrada[i] == '\n')
                        continue;
                    if(entrada[i] == alfabeto[j]){
                        // cout << entrada[i] << " == " << alfabeto[j] << " ---> " << j << endl;
                        simbolosEmInt[i] = j;
                        simboloExiste[i] = true;
                        addSimboloFinal = true;
                        last = i;
                        tam ++;
                        // cout << "cflg" << endl;
                        break;
                    }
                    else{
                        // cout << "flg" << endl;
                        simbolosEmInt[i] = 888;
                        addSimboloFinal = false;
                    }
                }

            }
            
/// ---------------------------------------ADICIONA O 0 NO FINAL DO ARRAY SE A PALAVRA CONTEM APENAS LETRAS PRESENTES NO ALFABETO-----------------------------------------------------
           if (addSimboloFinal){
             simbolosEmInt[++last] = 0;
           }
           // for (int i = 0; i < tam + 1; ++i){
           //     cout << simbolosEmInt[i] << " ";
           // }
           // cout << endl;

        /// FAZ UMA BUSCA NA MATRIZ PELOS INTEIROS CORRESPONTENTES A CADA POSIÇÃO DOS SIMBOLOS LIDOS.
            bool mostador = true; // se a palavra for aceita ele mostra no final no cmd apenas para alertar que ela foi aceita, caso contrario não mostra
            int proxLinha = 0; // Esta variável serve para saber qual a proxima linha da tabela que devemos ir
            
            for (int i = proxLinha; i < entrada.size() + 1; ++i){
                int simboloAtual = simbolosEmInt[i];
                // cout << simboloAtual << endl;
                if (simboloAtual == E){ // ERRO DE SIMBOLO NÃO EXISTENTE
                    // cout << "Flag erro SIMBOLO" << endl;
                    mostador = false;
                    saidas.push_back(E);
                    break;
                }
                if (tabelaTransicao[proxLinha][simboloAtual] == F){ // ERRO DE TRANSIÇÃO
                    // cout << "Flag erro TRANSICAO" << endl;
                    mostador = false;
                    saidas.push_back(F);
                    break;
                }
                if (tabelaTransicao[proxLinha][simboloAtual] == V){ // PALAVRA ACEITA
                    // cout << "Flag leitura aceita" << endl;
                    break;
                }
                if (tabelaTransicao[proxLinha][simboloAtual] != F && tabelaTransicao[proxLinha][simboloAtual] != E){ // BUSCA NA TABELA
                    proxLinha = tabelaTransicao[proxLinha][simboloAtual];
                    // cout << "Proxima" << proxLinha << endl;
                    saidas.push_back(proxLinha);
                }
            }
/// --------------- MOSTRA A PALAVRA ACEITA ------------------------------------
            
           if(mostador){
                cout << "ENTRADA " << entradas[ent] << " ACEITA: ";
                for (int j = 0; j < entradas[ent].size() + 1; ++j) {
                    
                    if(saidas[j] >= 0){
                        cout << saidas[j];
                        cout << " ";
                    }
                    
                }
                cout << endl;     
            }
/// --------------- MOSTRA VALORES ENVIADOS PARA ESCRITA ------------------------------------
            // cout << "Valores enviados para escrita: " << endl;
            // for (int t = 0; t < saidas.size() ; ++t){
            //     cout << saidas[t] << " ";
            // }
            // cout << endl;

            escreve(entradas[ent], saidas); // ENVIA PARA ESCRITA NO ARQUIVO OS VALORES
            
            mostador = true; // SE A PALAVRA FOR FALSA ELE VOLTA A SER VERDADEIRO PARA MOSTRAR A PROXIMA PALAVRA CASO ELA SEJA ACEITA
            
        }
    
    /// --------------------------------------------------------------------------------------------

    cout << endl << "Tempo total para resolver as entradas: " << (double)(clock() - tStart)/CLOCKS_PER_SEC << endl; // Tempo total
    return 0;

}